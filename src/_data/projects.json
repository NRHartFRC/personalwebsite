[
  {
    "title": "Arbitrage",
    "description": "Trade Wisely",
    "image": "./projectImages/arbitrage.png",
    "image2": "../projectImages/arbitragealgorithm.png",
    "image3": "../projectImages/arboutput.png",
    "body": "So get this: I had an income problem. Just get a job, right? Sure, however, I wanted a source of passive income. That was when I discovered the magic of Web3, blockchain, and the Ethereum ecosystem! A 'bot' executes profitable trades on my behalf by leveraging flashloans when it finds an arbitrage opportunity. Arbi-what? Flash-who? Press View Code button to see a detailed README file.\nHow? Well, the algorithm checks the prices of an ERC-20 token on different exchanges, determines the trade direction, determines profitability, then executes if and when specified conditions are met. The algorithm ‚ë† buys tokens through Market A, ‚ë° waits for an arbitrage opportunity, ‚ë¢ 'swaps' the ERC-20 tokens from Market A for those in Market B, then the bot ‚ë£ sells the tokens for profit!",
    "technologies": ["JavaScript", "Solidity", "Web3", "Flashloan", "Blockchain"],
    "github": "https://github.com/nrhartfrc/arbitragebot/",
    "deployed": "https://github-production-user-asset-6210df.s3.amazonaws.com/122415724/269414626-7d61ccd5-7016-4310-9705-e2483340a684.mp4",
    "bgcolor": "var(--hl2-color)",
    "id": "1"
  },

  {
    "title": "Exchange",
    "description": "ERC-20 Token Exchange",
    "image": "./projectImages/tokenexchange.png",
    "image2": "../projectImages/ether.png",
    "image3": "../projectImages/ethertoken.png",
    "technologies": ["ReactJS", "Redux", "Solidity", "HTML", "CSS", "HardHat"],
    "body": "Broh, I'll trade you a Pepecoin for an Apecoin.\nMy personal, decentralized app (a.k.a. 'dApp') for trading permissionless cryptocurrencies (ERC-20 tokens) on public blockchains. Simply connect a wallet, deposit funds, execute asynchronous trades, and withdrawal profits on-demand.\nPersonal use only. As of 2023, this dApp is currently unavailable for public use due to both Know Your Customer (KYC) & Anti-Money Laundering (AML) regulations, and personal protection. Compliance coming soon! üì± üåê",
    "github": "https://github.com/NRHartFRC/web3-token-exchange",
    "deployed": "https://github.com/NRHartFRC/web3-token-exchange/blob/main/README.md",
    "bgcolor": "#3e67ff",
    "id": "2"
  },

  {
    "title": "Robotics",
    "description": "Team Robotics Website",
    "image": "./projectImages/teachandmentor.png",
    "image2": "../projectImages/scrappy2.png",
    "image3": "../projectImages/crescendo.png",
    "technologies": ["JavaScript", "HTML", "CSS", "Jekyll", "Git", "GitHub"],
    "body": "Hey there! üëã This static website was created from the 'Jekyll Minima' theme (believe it or not). The website intended to be a continuous work-in-progress project that I built for teaching my robotics students about good 'ole web development fundamentals.\nDisclaimer: this was the first website that I have ever built. ü¶Ü It serves as a gateway into the wonderful world of web development! Ok, now hit me with the details! üí•\nThe website features pages like 'Photos', 'Blogs', 'Contact Us', 'FAQ', 'Sponsors', and more!\nShhhhh! The secrects are in the meta tags! This website features both Google Analytics and Google Search Console ‚Äì for those of us that like to stay well connected. üòâ\nRemember how hard it was to design, build and launch your first website? If you know, you know. The purpose of this project was to 'git' familiar web programming myself, then to pass down all of the 'lessons learned' onto my robotics pupils. With any luck, I just may inspire some curious students to get into UI/UX!",
    "github": "https://github.com/OceanaRobotics/OceanaFRC/",
    "deployed": "https://oceanarobotics.github.io/OceanaFRC/",
    "bgcolor": "var(--hl-color)",
    "id": "3"
  },

  {
    "title": "Invest",
    "description": "Financial Strategic Indicators",
    "image": "./projectImages/invest.png",
    "image2": "../projectImages/indicators.png",
    "image3": "../projectImages/jupyter.png",
    "technologies": ["Colab", "Python", "yFinance", "DataReader","Jupyter"],
    "body": "So you wanna invest, huh? You may want to begin by characterizing the market first. Use this Jupyter Notebook to compare observed price-action against well known strategic indicators! Not sure how to feel? That is fine, both BUY (‚ñ≤) and SELL (‚ñº) signals are included!",
    "github": "https://github.com/NRHartFRC/Financial-Analysis-Tool/",
    "deployed": "https://colab.research.google.com/drive/1QPIjAOgsimCPw1RYmY-bRZn-fHvINufq",
    "bgcolor": "#6c4bf4",
    "id": "4"
  },

  {
    "title": "Predict",
    "description": "LSTM Modeling",
    "image": "./projectImages/lstm.png",
    "image2": "../projectImages/keras.png",
    "image3": "../projectImages/neural.png",
    "body": "Calling all AI enthusist, back by popular demand - Keras!\nThis program will attempt to predict the underlying price for the following day using Long Short Term Memory method provided by Keras sequential API for deep learning applications. This program captures a dataset for a given tag (i.e., ticker symbol) and timeframe from Yahoo Finance API, trains an AI model using a sequential neural network, then outputs both a plot, and the predicted output price for the following day! üß† üíª",
    "technologies": ["Colab", "Python", "yFinance", "DataReader","Jupyter", "Keras"],
    "github": "https://github.com/NRHartFRC/LSTM-Modeling",
    "deployed": "https://colab.research.google.com/drive/1TJ5oCKDXbYsoU8mKI1pbPzLx8LOd76eF",
    "bgcolor": "#e47911",
    "id": "5"
  },

  {
    "title": "Feedback",
    "description": "PID Position Control",
    "image": "./projectImages/analogmode.png",
    "image2": "../projectImages/pidtune.png",
    "image3": "../projectImages/circuit.png",
    "technologies": ["Java", "VS Code", "REV SparkMax", "CAN Bus", "roboRIO", "PID"],
    "body": "Gee wilickers, is that PID tuning? You bet! Welcome to the prestige of closed loop, position feedback control. Cool, here is the deal:\nThis program will be used as a starter code - I will train high school students for a world-wide robotics competition using this Java program. We have a few months to prepare before we compete! This Java code uses the RoboRIO as a PID controller. When paired with SmartDashboard application, it can be used with an analog sensor (potentiometer) and manual inputs to control the EXACT position of a motor! üìè\n",
    "github": "https://github.com/NRHartFRC/Position-Closed-Loop-PID-Control",
    "deployed": "https://drive.google.com/file/d/14nD4MGXYpmLmDjbp2KPoN8eAUyaJn56h/view?usp=sharing",
    "bgcolor": "#f85781",
    "id": "6"
  }

]
